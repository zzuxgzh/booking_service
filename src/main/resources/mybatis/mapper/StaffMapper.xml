<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzu.dao.IStaffDao">
    <select id="getStaffById" resultType="com.zzu.entity.Staff">
        select * from staff where staff_id=#{id};
    </select>

    <select id="getAllStaffs" resultType="com.zzu.entity.Staff">
        select * from staff;
    </select>

    <select id="getSomeStaff" resultType="com.zzu.entity.Staff">
        select * from staff
        <where>
            <if test="param != null">
                name like #{param}
            </if>
        </where>
    </select>

    <select id="getSomeOutStaff" resultType="com.zzu.booking_manager.staff.StaffOutParam">
        select staff_id, staff.name, pwd, staff.status, airdrome_id,
        airdrome.name as airdrome_name, location from staff, airdrome
        WHERE  airdrome_id = air_id
            <if test="param != null">
               and staff.name like #{param}
            </if>

    </select>


    <select id="getAllOutStaff" resultType="com.zzu.booking_manager.staff.StaffOutParam">
        select staff_id, staff.name, pwd, staff.status, airdrome_id,
        airdrome.name as airdrome_name, location from staff, airdrome
        where airdrome_id = air_id;
    </select>

    <select id="getOutStaffById" resultType="com.zzu.booking_manager.staff.StaffOutParam">
         select staff_id, staff.name, pwd, staff.status, airdrome_id,
        airdrome.name as airdrome_name, location from staff, airdrome
        where airdrome_id = air_id and staff_id=#{id};
    </select>

    <insert id="insert" parameterType="com.zzu.entity.Staff">
        insert into staff(name, pwd, status, airdrome_id)
        values (#{name}, #{pwd}, #{status}, #{airdromeId});
    </insert>

    <insert id="insertSelective" parameterType="com.zzu.entity.Staff">
        insert into staff
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="name != null" >
                name,
            </if>
            <if test="pwd != null" >
                pwd,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="airdromeId != null" >
                airdrome_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="name != null" >
                #{name},
            </if>
            <if test="pwd != null" >
                #{pwd},
            </if>
            <if test="status != null" >
                #{status},
            </if>
            <if test="airdromeId != null" >
                #{airdromeId},
            </if>
        </trim>
    </insert>

    <delete id="deleteById" >
        delete from staff where staff_id = #{id}
    </delete>

    <update id="update" parameterType="com.zzu.entity.Staff">
        update staff
        set name = #{name}, pwd = #{pwd}, status = #{status},  airdrome_id= #{airdromeId},
        where staff_id = #{staffId}
    </update>
    <update id="updateSelective" parameterType="com.zzu.entity.Staff">
        update staff
        <set>
            <if test="name != null">name = #{name}, </if>
            <if test="pwd != null">pwd = #{pwd}, </if>
            <if test="status != null">status = #{status}, </if>
            <if test="airdromeId != null">airdrome_id= #{airdromeId}, </if>
        </set>
        where staff_id = #{staffId}
    </update>
</mapper>