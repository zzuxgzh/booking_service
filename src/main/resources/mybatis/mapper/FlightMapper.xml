<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzu.dao.IFlightDao">
    <select id="getFlightById" resultType="com.zzu.entity.Flight">
        select * from flight where flight_id=#{id};
    </select>



    <select id="getSourceFlightsByAirdome" resultType="com.zzu.entity.Flight">
        select * from flight where source = #{source};
    </select>

    <select id="getTargetFlightsByAirdome" resultType="com.zzu.entity.Flight">
        select * from flight where target = #{target};
    </select>

    <select id="getFliById" resultType="com.zzu.booking_manager.flight.FlightOutParam">
        select * from flight where flight_id=#{id};
    </select>




    <select id="getSourceFlisByAirdome" resultType="com.zzu.booking_manager.flight.FlightOutParam">
        select * from flight where source = #{source};
    </select>

    <select id="getSourceFlisByTime" resultType="com.zzu.booking_manager.flight.FlightOutParam">
        select * from flight where source = #{source} and ((status=0 or status=3) and  TIMESTAMPDIFF(SECOND,starttime,NOW())>0) ;
    </select>

    <select id="getTargetFlisByAirdome" resultType="com.zzu.booking_manager.flight.FlightOutParam">
        select * from flight where target = #{target};
    </select>



    <select id="getSomeFli" resultType="com.zzu.booking_manager.flight.FlightOutParam">
    select flight_id ,plane_id, source, target, starttime, preendtime, flight.status, economy_class, business_class, first_class, oprice,name as tName
    from flight,airdrome where target=air_id  and source=#{source}
    <if test="param != null">
        and (name like #{param}or flight_id like #{param} or plane_id like #{param})
    </if>
</select>

    <select id="getSomeFli2" resultType="com.zzu.booking_manager.flight.FlightOutParam">
        select flight_id ,plane_id, source, target, starttime, preendtime, flight.status, economy_class, business_class, first_class, oprice,name as tName
        from flight,airdrome where target=air_id  and source=#{source} and ((flight.status=0 or flight.status=3) and  TIMESTAMPDIFF(SECOND,starttime,NOW())>0)
        <if test="param != null">
            and (name like #{param}or flight_id like #{param} or plane_id like #{param})
        </if>
    </select>


    <insert id="insert" parameterType="com.zzu.entity.Flight">
        insert into flight(plane_id, source, target, starttime, preendtime, status, economy_class, business_class, first_class, oprice)
        values (#{planeId}, #{source}, #{target}, #{starttime}, #{preendtime}, #{status}, #{economyClass}, #{businessClass}, #{firstClass}, #{oprice});
    </insert>

    <delete id="deleteById" >
        delete from flight where flight_id = #{id}
    </delete>

    <update id="update" parameterType="com.zzu.entity.Flight">
        update flight
        set  preendtime = #{preendtime}, starttime = #{starttime},status=#{status}
        where flight_id = #{flightId}
    </update>

    <update id="updateSelective" parameterType="com.zzu.entity.Flight">
        update flight
        <set>
            <if test="planeId != null">plane_id = #{planeId}, </if>
            <if test="source != null">source = #{source}, </if>
            <if test="target != null">target = #{target}, </if>
            <if test="starttime != null">starttime = #{starttime}, </if>
            <if test="preendtime != null">preendtime = #{preendtime}, </if>
            <if test="endtime != null">endtime = #{endtime}, </if>
            <if test="status != null">status = #{status}, </if>
        </set>
        where flight_id = #{flightId}
    </update>
    <update id="changeFlightStatusById" parameterType="com.zzu.entity.Flight">
        update flight set status = #{status} where flight_id = #{flightId}
    </update>
</mapper>